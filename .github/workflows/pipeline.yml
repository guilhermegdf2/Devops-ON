name: pipeline

on:
  push:
  
jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - run: mvn test  
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4.4.0
      with:
        name: jacoco-report
        path: target/site/jacoco/
        
  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 17
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v4.2.3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v4.2.3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_AUTOGLASS }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.qualitygate.wait=true -Dsonar.projectKey=guilhermegdf2_Devops-ON

  dependency-check:
    runs-on: ubuntu-latest
    needs: code-analisys
  
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
  
      - name: Remove mvnw file if present
        run: |
          if [ -f mvnw ]; then rm mvnw; echo "Removed mvnw"; fi
  
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
  
      - name: Install Snyk CLI
        run: npm install -g snyk
  
      - name: Run Snyk Vulnerability Scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test || true --skip-maven-wrapper

      - name: Snyk monitor
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk monitor



  build:
    runs-on: ubuntu-latest
    needs: dependency-check
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml      
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: target/
    - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
      uses: actions/upload-artifact@v4.4.0
      with:
        #Set artifact name
        name: artifact
        #From this path
        path: target/demo-0.0.2.7-SNAPSHOT.jar
    
    - name: Package
      run: mvn package
      
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: stg
    
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy DEV"
  
  deploy-uat:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/uat'
    environment:
      name: uat
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy UAT"
             
  deploy-prod-Azure:
    needs: build
    name: deploy-prod-Azure
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'    
    environment:
      name: AZURE-PRO        
      url: https://fiapapp.azurewebsites.net/
    steps:
       - name: Download JAR
         uses: actions/download-artifact@v4
         with:
           name: artifact
           path: target/   
       - name: DeployAzure   
         uses: azure/webapps-deploy@v2
         with:
            app-name: DevopsFiap-On-app
            publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} 
            package: '${{ github.workspace }}/target/*.jar'

  Smoketest:
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-uat, deploy-prod-Azure]
    
    if: |
      needs.deploy-dev.result == 'success' ||
      needs.deploy-uat.result == 'success' ||
      needs.deploy-prod-Azure.result == 'success'

    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'          
          
  testeFuncionais:
    runs-on: ubuntu-latest
    needs: Smoketest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testesFuncionais.sh'  
